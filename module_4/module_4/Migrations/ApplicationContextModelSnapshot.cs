// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using module_4;

#nullable disable

namespace module_4.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("module_4.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"), 1L, 1);

                    b.Property<int?>("ArtistSongId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("ArtistId");

                    b.HasIndex("ArtistSongId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            DateOfBirth = new DateTime(1979, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kelis@email",
                            InstagramUrl = "@Kelis",
                            Name = "Kelis",
                            Phone = 5553535
                        },
                        new
                        {
                            ArtistId = 2,
                            DateOfBirth = new DateTime(2003, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "TRJA@email",
                            InstagramUrl = "@TRJA",
                            Name = "The Red Jumpsuit Apparatus",
                            Phone = 5553535
                        },
                        new
                        {
                            ArtistId = 3,
                            DateOfBirth = new DateTime(1989, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Kizaru@email",
                            InstagramUrl = "@Kizaru",
                            Name = "Kizaru",
                            Phone = 5553535
                        });
                });

            modelBuilder.Entity("module_4.ArtistSong", b =>
                {
                    b.Property<int>("ArtistSongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistSongId"), 1L, 1);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("ArtistSongId");

                    b.ToTable("ArtistSongs");

                    b.HasData(
                        new
                        {
                            ArtistSongId = 1,
                            ArtistId = 1,
                            SongId = 1
                        },
                        new
                        {
                            ArtistSongId = 2,
                            ArtistId = 2,
                            SongId = 2
                        },
                        new
                        {
                            ArtistSongId = 3,
                            ArtistId = 3,
                            SongId = 3
                        });
                });

            modelBuilder.Entity("module_4.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"), 1L, 1);

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.HasIndex("SongId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("module_4.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SongId"), 1L, 1);

                    b.Property<int?>("ArtistSongId")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SongId");

                    b.HasIndex("ArtistSongId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            Duration = "3:26",
                            GenreId = 1,
                            ReleasedDate = new DateTime(2003, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Trick Me"
                        },
                        new
                        {
                            SongId = 2,
                            Duration = "3:12",
                            GenreId = 1,
                            ReleasedDate = new DateTime(2006, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Face Down"
                        },
                        new
                        {
                            SongId = 3,
                            Duration = "2:15",
                            GenreId = 2,
                            ReleasedDate = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Money long"
                        });
                });

            modelBuilder.Entity("module_4.Artist", b =>
                {
                    b.HasOne("module_4.ArtistSong", null)
                        .WithMany("Artist")
                        .HasForeignKey("ArtistSongId");
                });

            modelBuilder.Entity("module_4.Genre", b =>
                {
                    b.HasOne("module_4.Song", "Song")
                        .WithMany("Genre")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Song");
                });

            modelBuilder.Entity("module_4.Song", b =>
                {
                    b.HasOne("module_4.ArtistSong", null)
                        .WithMany("Song")
                        .HasForeignKey("ArtistSongId");
                });

            modelBuilder.Entity("module_4.ArtistSong", b =>
                {
                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("module_4.Song", b =>
                {
                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
